<?php
/**
<div class="p">
Script to process documentation requests for PHP files. After processing,
documentation sections, such as this, will appear part of the HTML page and
code chunks between documentation will appear as syntax highlighted, numbered
blocks.
</div>
*/
// example code block!
/**
<div class="p">
The first step is to determine the file to process. We expect that requests
for documentation of PHP files are redirected here by the HTTP server. The
general format of the request should look something like:
<pre>
'&lt;project&gt;/documentation/&lt;PHP file path&gt;'
</pre>
where PHP files are recognized by the '.php' extension. The request is mapped
to a file within the 'src' directory of the indicated project. For example:
<pre>
/foo/documentation/some/path/file.php =&gt; /home/user/playground/foo/src/some/path/file.php
</pre>
</div>
*/
require('/home/user/playground/kwiki/runnable/include/kwiki-lib.php');

if (!isset($doc_rest_id))
    $doc_rest_id = $_SERVER['REQUEST_URI'];
$file = basename($doc_rest_id); // used as the page title
/**
<div class="p">
  The HTML intro is generated by the <a href="/TODO">page_open.php</a>
  snippet. At the moment, there is no support for modifying the header, but
  the process will support templates in some fashion as part of 1.0.
</div>
*/
$pageTitle = 'Dog Food Software || '.$file;
$headerTitle = $file;
$pageDescription = ''; // TODO
$pageAuthor = 'Liquid Labs, LLC';
$minifyBundle = 'fileDoc';
$project = preg_replace('/^\/documentation\/([^\/]+).*/', '$1', $doc_rest_id);
$isaTrail = array('<a href="/projects/">projects</a>',
                  '<a href="/projects/'.$project.'">'.$project.'</a>');

require '/home/user/playground/dogfoodsoftware.com/runnable/page_open.php';
require '/home/user/playground/kwiki/runnable/include/code-to-html.php';
code_to_html($doc_rest_id);
require '/home/user/playground/dogfoodsoftware.com/runnable/page_close.php';
/**
<!-- it's a bit of a hack injecting another section at the moment; have to 
     close the implicit blurb summary div here, but not the explicit one later 
     blurb summary close bacuse that will be done by the php-processor itself -->
	  </div>
	<div class="grid_12 blurbSummary">
	  <div class="blurbTitle">
		Code Resize Notes
	  </div>
<div class="p">
The resize handle must be within the resizable item. It seems there is some
interaction with the PRE element, however, because the container won't resize
even when the height is left unspecified which should, I believe, result in
auto-resizing behavior.
</div>
<div class="p">
It is therefore necessary to use the 'alsoResize' feature. I'm not convinced
this is actually necessary, but it's working so I'm leaving it in place for
now.
</div>
<div class="p">
  One other (seeming) idosyncrosy to note: you can't the drag-handle image
  inside the drag handle div, it has to be used as a background to the div;
  the problem is that if the image is it's own element in the div, you cannot
  actually grab where the image is, it hides the div and is not itself part of
  the drag handle. I.e., the drag handle element must not have any (visible)
  children.
</div>
*/
?>
